	// https://leetcode.com/problems/valid-sudoku/

class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        bool ok = 1;
        int n = 9;
        for(int i = 0; i < n && ok; ++i){
            for(int j = 0; j < n && ok; ++j)if(board[i][j] != '.' && count(board[i].begin(), board[i].end(), board[i][j]) > 1){
                ok = 0;
            }
            set<char>tmp;
            for(int j = 0; j < n && ok; ++j)if(board[j][i] != '.'){
                if(tmp.find(board[j][i]) != tmp.end()){
                    ok = 0;
                }
                tmp.insert(board[j][i]);
            }
            if(i % 3 == 0){
                for(int stp = 0; stp < 9; stp += 3){
                    tmp.clear();
                    for(int ii = 0; ii < 3; ++ii){
                        for(int jj = 0; jj < 3; ++jj)if(board[stp + ii][i + jj] != '.'){
                            if(tmp.find(board[stp + ii][i + jj]) != tmp.end()){
                                ok = 0;
                            }
                            tmp.insert(board[stp + ii][i + jj]);
                        }
                    }
                }
            }
        }
        return ok;
    }
};
